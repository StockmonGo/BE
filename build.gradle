plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

allprojects {

	group = 'com.pda'
	version = '0.0.1-SNAPSHOT'

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(17)
		}
	}

	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	repositories {
		mavenCentral()
	}

	ext {
		set('springCloudVersion', "2023.0.3")
	}

	dependencies {

		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
		implementation 'org.springframework.boot:spring-boot-starter-data-redis'
		implementation 'io.lettuce:lettuce-core'
		compileOnly 'org.projectlombok:lombok'

		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'

		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

		implementation 'org.springframework.boot:spring-boot-starter-amqp'

	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	tasks.named('test') {
		useJUnitPlatform()
	}

}

project(':stock'){
	dependencies {
		implementation project(':commons')
	}
}

project(':core'){
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

		runtimeOnly 'com.mysql:mysql-connector-j'


		implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
		implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
		implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
		implementation project(':commons')
	}
}